import 'package:flutter/material.dart';

void main() {
  runApp(const GerenciadorDeTarefas());
}

class GerenciadorDeTarefas extends StatelessWidget {
  const GerenciadorDeTarefas({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Gerenciador de Tarefas',
      debugShowCheckedModeBanner: false,
      theme: ThemeData.dark().copyWith(
        scaffoldBackgroundColor: const Color(0xFF100d38),
        primaryColor: Colors.deepPurple,
        appBarTheme: const AppBarTheme(
          backgroundColor: Color(0xFF1c184b),
          foregroundColor: Colors.white,
          elevation: 2,
        ),
        inputDecorationTheme: const InputDecorationTheme(
          filled: true,
          fillColor: Color(0xFF1e1b4d),
          border: OutlineInputBorder(
            borderRadius: BorderRadius.all(Radius.circular(12)),
          ),
          labelStyle: TextStyle(color: Colors.white),
        ),
        elevatedButtonTheme: ElevatedButtonThemeData(
          style: ElevatedButton.styleFrom(
            backgroundColor: Colors.deepPurple,
            foregroundColor: Colors.white,
            padding: const EdgeInsets.symmetric(vertical: 12, horizontal: 20),
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(10),
            ),
          ),
        ),
        textTheme: const TextTheme(
          bodyMedium: TextStyle(color: Colors.white),
          titleLarge: TextStyle(color: Colors.white),
        ),
        iconTheme: const IconThemeData(color: Colors.white),
        floatingActionButtonTheme: const FloatingActionButtonThemeData(
          backgroundColor: Colors.deepPurple,
          foregroundColor: Colors.white,
        ),
      ),
      initialRoute: '/',
      routes: {
        '/': (context) => const TelaDeLogin(),
        '/tarefas': (context) => const TelaDeListaDeTarefas(),
        '/informacoes': (context) => const TelaDeInformacoes(),
      },
    );
  }
}

class Tarefa {
  String titulo;
  String descricao;
  Tarefa({required this.titulo, required this.descricao});
}

class TelaDeLogin extends StatelessWidget {
  const TelaDeLogin({super.key});

  @override
  Widget build(BuildContext context) {
    final TextEditingController usuarioController = TextEditingController();
    final TextEditingController senhaController = TextEditingController();

    return Scaffold(
      body: Padding(
        padding: const EdgeInsets.all(24.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text(
              'Task Manager',
              style: TextStyle(
                fontSize: 32,
                fontWeight: FontWeight.bold,
                color: Colors.white,
              ),
            ),
            const SizedBox(height: 40),
            TextField(
              controller: usuarioController,
              style: const TextStyle(color: Colors.white),
              decoration: const InputDecoration(labelText: 'Usuário'),
            ),
            const SizedBox(height: 16),
            TextField(
              controller: senhaController,
              style: const TextStyle(color: Colors.white),
              decoration: const InputDecoration(labelText: 'Senha'),
              obscureText: true,
            ),
            const SizedBox(height: 24),
            ElevatedButton(
              onPressed: () {
                if (usuarioController.text == 'dudu' &&
                    senhaController.text == '123') {
                  Navigator.pushReplacementNamed(context, '/tarefas');
                } else {
                  ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                    content: const Text('Usuário ou senha incorretos',
                        style: TextStyle(color: Colors.white)),
                    backgroundColor: Colors.red,
                    behavior: SnackBarBehavior.floating,
                  ));
                }
              },
              child: const Text('Entrar'),
            ),
          ],
        ),
      ),
    );
  }
}

class TelaDeListaDeTarefas extends StatefulWidget {
  const TelaDeListaDeTarefas({super.key});

  @override
  State<TelaDeListaDeTarefas> createState() => _TelaDeListaDeTarefasState();
}

class _TelaDeListaDeTarefasState extends State<TelaDeListaDeTarefas> {
  final List<Tarefa> tarefas = [];

  void logout(BuildContext context) {
    Navigator.pushNamedAndRemoveUntil(context, '/', (route) => false);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Lista de Tarefas'),
        actions: [
          IconButton(
            icon: const Icon(Icons.info_outline),
            onPressed: () => Navigator.pushNamed(context, '/informacoes'),
          ),
          IconButton(
            icon: const Icon(Icons.logout),
            onPressed: () => logout(context),
            tooltip: 'Logout',
          ),
        ],
      ),
      body: tarefas.isEmpty
          ? const Center(child: Text("Nenhuma tarefa ainda."))
          : ListView.builder(
              itemCount: tarefas.length,
              itemBuilder: (context, index) {
                return Card(
                  color: const Color(0xFF1e1b4d),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(12),
                  ),
                  margin:
                      const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
                  child: ListTile(
                    title: Text(tarefas[index].titulo,
                        style: const TextStyle(color: Colors.white)),
                    subtitle: Text(tarefas[index].descricao,
                        style: const TextStyle(color: Colors.white70)),
                    trailing: Row(
                      mainAxisSize: MainAxisSize.min,
                      children: [
                        IconButton(
                          icon: const Icon(Icons.edit),
                          onPressed: () async {
                            final tarefaAtualizada = await Navigator.push(
                              context,
                              MaterialPageRoute(
                                builder: (context) => TelaDeFormularioDeTarefa(
                                  tarefa: tarefas[index],
                                  index: index,
                                ),
                              ),
                            );
                            if (tarefaAtualizada != null) {
                              setState(() {
                                tarefas[index] = tarefaAtualizada;
                              });
                            }
                          },
                        ),
                        IconButton(
                          icon: const Icon(Icons.delete),
                          onPressed: () {
                            setState(() {
                              tarefas.removeAt(index);
                            });
                          },
                        ),
                      ],
                    ),
                  ),
                );
              },
            ),
      floatingActionButton: FloatingActionButton(
        onPressed: () async {
          final novaTarefa = await Navigator.push(
            context,
            MaterialPageRoute(
                builder: (context) => const TelaDeFormularioDeTarefa()),
          );
          if (novaTarefa != null) {
            setState(() {
              tarefas.add(novaTarefa as Tarefa);
            });
          }
        },
        child: const Icon(Icons.add),
      ),
    );
  }
}

class TelaDeFormularioDeTarefa extends StatefulWidget {
  final Tarefa? tarefa;
  final int? index;
  const TelaDeFormularioDeTarefa({super.key, this.tarefa, this.index});

  @override
  State<TelaDeFormularioDeTarefa> createState() =>
      _TelaDeFormularioDeTarefaState();
}

class _TelaDeFormularioDeTarefaState extends State<TelaDeFormularioDeTarefa> {
  final _formKey = GlobalKey<FormState>();
  late TextEditingController _tituloController;
  late TextEditingController _descricaoController;

  @override
  void initState() {
    super.initState();
    _tituloController =
        TextEditingController(text: widget.tarefa?.titulo ?? '');
    _descricaoController =
        TextEditingController(text: widget.tarefa?.descricao ?? '');
  }

  @override
  void dispose() {
    _tituloController.dispose();
    _descricaoController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(widget.tarefa == null ? 'Nova Tarefa' : 'Editar Tarefa'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(24.0),
        child: Form(
          key: _formKey,
          child: Column(
            children: [
              TextFormField(
                controller: _tituloController,
                style: const TextStyle(color: Colors.white),
                decoration: const InputDecoration(labelText: 'Título'),
                validator: (value) =>
                    value == null || value.isEmpty ? 'Informe o título' : null,
              ),
              const SizedBox(height: 16),
              TextFormField(
                controller: _descricaoController,
                style: const TextStyle(color: Colors.white),
                decoration: const InputDecoration(labelText: 'Descrição'),
                validator: (value) => value == null || value.isEmpty
                    ? 'Informe a descrição'
                    : null,
              ),
              const SizedBox(height: 24),
              ElevatedButton(
                onPressed: () {
                  if (_formKey.currentState!.validate()) {
                    final tarefa = Tarefa(
                      titulo: _tituloController.text,
                      descricao: _descricaoController.text,
                    );
                    Navigator.pop(context, tarefa);
                  }
                },
                child: const Text('Salvar'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

class TelaDeInformacoes extends StatelessWidget {
  const TelaDeInformacoes({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Informações')),
      body: const Center(
        child: Padding(
          padding: EdgeInsets.all(24.0),
          child: Text(
            'Bem-vindo ao Gerenciador de Tarefas!\n\n'
            'Você pode criar, editar e excluir tarefas à vontade.\n'
            'Use o botão "+" para adicionar novas tarefas.',
            textAlign: TextAlign.center,
            style: TextStyle(fontSize: 16, color: Colors.white70),
          ),
        ),
      ),
    );
  }
}
